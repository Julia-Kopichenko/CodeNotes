//! Итерируемые объекты - те, объекты, кот.представляют собой последовательность элементов и которые можно перебрать в цикле for...of

// Массив - перебираемый объект
const nums = [1,2,3,4]
for (let num of nums) {
  console.log(num);
}

// Строка - перебираемый объект
const str = '1234'
for (let char of str) {
  console.log(char);
}

// Если объект не является массивом, но представляет собой коллекцию каких-то элементов, то удобно использовать цикл for..of для их перебора, так что давайте посмотрим, как это сделать.

//! Любой объект можно сделать перебираемым, добавив специальный метод Symbol.iterator

// Например, у нас есть объект. Это не массив, но он выглядит подходящим для for..of.

// Например, объект range, который представляет собой диапазон чисел:

let range = {
  from: 10,
  to: 20
};

// Мы хотим, чтобы работал for..of:
// for(let num of range) ... num=1,2,3,4,5

// 1. вызов for..of сначала вызывает эту функцию
range[Symbol.iterator] = function() {

  // ...она возвращает объект итератора:
  // 2. Далее, for..of работает только с этим итератором, запрашивая у него новые значения
  return {
    current: this.from,
    last: this.to,

    // 3. next() вызывается на каждой итерации цикла for..of
    next() {
      // 4. он должен вернуть значение в виде объекта {done:.., value :...}
      if (this.current <= this.last) {
        return { done: false, value: this.current++ };
      } else {
        return { done: true };
      }
    }
  };
};

// теперь работает!
for (let num of range) {
  console.log(num); // 1, затем 2, 3, 4, 5
}